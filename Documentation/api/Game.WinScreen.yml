### YamlMime:ManagedReference
items:
- uid: Game.WinScreen
  commentId: T:Game.WinScreen
  id: WinScreen
  parent: Game
  children:
  - Game.WinScreen.Instance
  - Game.WinScreen.playerTexts
  - Game.WinScreen.ShowWinScreen(System.Int32)
  langs:
  - csharp
  - vb
  name: WinScreen
  nameWithType: WinScreen
  fullName: Game.WinScreen
  type: Class
  source:
    id: WinScreen
    path: ''
    startLine: 915
  assemblies:
  - cs.temp.dll
  namespace: Game
  summary: "\nManages the win screen display for the game.\nDisplays the winning player&apos;s information and triggers the win screen animation.\n"
  example: []
  syntax:
    content: 'public class WinScreen : MonoBehaviour'
    content.vb: Public Class WinScreen Inherits MonoBehaviour
  inheritance:
  - System.Object
- uid: Game.WinScreen.Instance
  commentId: F:Game.WinScreen.Instance
  id: Instance
  parent: Game.WinScreen
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: WinScreen.Instance
  fullName: Game.WinScreen.Instance
  type: Field
  source:
    id: Instance
    path: ''
    startLine: 921
  assemblies:
  - cs.temp.dll
  namespace: Game
  summary: "\nA singleton instance of the <xref href=\"Game.WinScreen\" data-throw-if-not-resolved=\"false\"></xref> class.\nEnsures only one instance of the WinScreen exists at a time.\n"
  example: []
  syntax:
    content: public static WinScreen Instance
    return:
      type: Game.WinScreen
    content.vb: Public Shared Instance As WinScreen
- uid: Game.WinScreen.playerTexts
  commentId: F:Game.WinScreen.playerTexts
  id: playerTexts
  parent: Game.WinScreen
  langs:
  - csharp
  - vb
  name: playerTexts
  nameWithType: WinScreen.playerTexts
  fullName: Game.WinScreen.playerTexts
  type: Field
  source:
    id: playerTexts
    path: ''
    startLine: 926
  assemblies:
  - cs.temp.dll
  namespace: Game
  summary: "\nA list of text elements used to display player information on the win screen.\n"
  example: []
  syntax:
    content: public List<TextMeshProUGUI> playerTexts
    return:
      type: Global.List{TextMeshProUGUI}
    content.vb: Public playerTexts As List(Of TextMeshProUGUI)
- uid: Game.WinScreen.ShowWinScreen(System.Int32)
  commentId: M:Game.WinScreen.ShowWinScreen(System.Int32)
  id: ShowWinScreen(System.Int32)
  parent: Game.WinScreen
  langs:
  - csharp
  - vb
  name: ShowWinScreen(int)
  nameWithType: WinScreen.ShowWinScreen(int)
  fullName: Game.WinScreen.ShowWinScreen(int)
  type: Method
  source:
    id: ShowWinScreen
    path: ''
    startLine: 949
  assemblies:
  - cs.temp.dll
  namespace: Game
  summary: "\nDisplays the win screen for the specified player.\nUpdates the text and color of the win screen to reflect the winning player.\n"
  example: []
  syntax:
    content: public void ShowWinScreen(int player)
    parameters:
    - id: player
      type: System.Int32
      description: The number of the winning player (1-based index).
    content.vb: Public Sub ShowWinScreen(player As Integer)
  overload: Game.WinScreen.ShowWinScreen*
  nameWithType.vb: WinScreen.ShowWinScreen(Integer)
  fullName.vb: Game.WinScreen.ShowWinScreen(Integer)
  name.vb: ShowWinScreen(Integer)
references:
- uid: Game
  commentId: N:Game
  name: Game
  nameWithType: Game
  fullName: Game
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Game.WinScreen
  commentId: T:Game.WinScreen
  parent: Game
  name: WinScreen
  nameWithType: WinScreen
  fullName: Game.WinScreen
- uid: Global.List{TextMeshProUGUI}
  commentId: '!:Global.List{TextMeshProUGUI}'
  definition: Global.List`1
  name: List<TextMeshProUGUI>
  nameWithType: List<TextMeshProUGUI>
  fullName: List<TextMeshProUGUI>
  nameWithType.vb: List(Of TextMeshProUGUI)
  fullName.vb: List(Of TextMeshProUGUI)
  name.vb: List(Of TextMeshProUGUI)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.TextMeshProUGUI
    name: TextMeshProUGUI
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.TextMeshProUGUI
    name: TextMeshProUGUI
    isExternal: true
  - name: )
- uid: Global.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: Game.WinScreen.ShowWinScreen*
  commentId: Overload:Game.WinScreen.ShowWinScreen
  name: ShowWinScreen
  nameWithType: WinScreen.ShowWinScreen
  fullName: Game.WinScreen.ShowWinScreen
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
