### YamlMime:ManagedReference
items:
- uid: Global.SoundEffect
  commentId: T:Global.SoundEffect
  id: SoundEffect
  parent: Global
  children:
  - Global.SoundEffect.#ctor(System.String,AudioSource)
  - Global.SoundEffect.audioSource
  - Global.SoundEffect.name
  langs:
  - csharp
  - vb
  name: SoundEffect
  nameWithType: SoundEffect
  fullName: SoundEffect
  type: Class
  source:
    id: SoundEffect
    path: ''
    startLine: 489
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public class SoundEffect
    content.vb: Public Class SoundEffect
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Global.SoundEffect.name
  commentId: F:Global.SoundEffect.name
  id: name
  parent: Global.SoundEffect
  langs:
  - csharp
  - vb
  name: name
  nameWithType: SoundEffect.name
  fullName: SoundEffect.name
  type: Field
  source:
    id: name
    path: ''
    startLine: 491
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public string name
    return:
      type: System.String
    content.vb: Public name As String
- uid: Global.SoundEffect.audioSource
  commentId: F:Global.SoundEffect.audioSource
  id: audioSource
  parent: Global.SoundEffect
  langs:
  - csharp
  - vb
  name: audioSource
  nameWithType: SoundEffect.audioSource
  fullName: SoundEffect.audioSource
  type: Field
  source:
    id: audioSource
    path: ''
    startLine: 492
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public AudioSource audioSource
    return:
      type: Global.AudioSource
    content.vb: Public audioSource As AudioSource
- uid: Global.SoundEffect.#ctor(System.String,AudioSource)
  commentId: M:Global.SoundEffect.#ctor(System.String,AudioSource)
  id: '#ctor(System.String,AudioSource)'
  parent: Global.SoundEffect
  langs:
  - csharp
  - vb
  name: SoundEffect(string, AudioSource)
  nameWithType: SoundEffect.SoundEffect(string, AudioSource)
  fullName: SoundEffect.SoundEffect(string, AudioSource)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 494
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public SoundEffect(string name, AudioSource audioSource)
    parameters:
    - id: name
      type: System.String
    - id: audioSource
      type: Global.AudioSource
    content.vb: Public Sub New(name As String, audioSource As AudioSource)
  overload: Global.SoundEffect.#ctor*
  nameWithType.vb: SoundEffect.New(String, AudioSource)
  fullName.vb: SoundEffect.New(String, AudioSource)
  name.vb: New(String, AudioSource)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.AudioSource
  isExternal: true
  name: AudioSource
  nameWithType: AudioSource
  fullName: AudioSource
- uid: Global.SoundEffect.#ctor*
  commentId: Overload:Global.SoundEffect.#ctor
  name: SoundEffect
  nameWithType: SoundEffect.SoundEffect
  fullName: SoundEffect.SoundEffect
  nameWithType.vb: SoundEffect.New
  fullName.vb: SoundEffect.New
  name.vb: New
