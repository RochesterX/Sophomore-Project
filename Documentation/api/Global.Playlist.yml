### YamlMime:ManagedReference
items:
- uid: Global.Playlist
  commentId: T:Global.Playlist
  id: Playlist
  parent: Global
  children:
  - Global.Playlist.shuffleTime
  - Global.Playlist.songs
  - Global.Playlist.trackName
  - Global.Playlist.trackScenes
  - Global.Playlist.volume
  langs:
  - csharp
  - vb
  name: Playlist
  nameWithType: Playlist
  fullName: Playlist
  type: Class
  source:
    id: Playlist
    path: ''
    startLine: 1008
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public class Playlist
    content.vb: >-
      <Serializable>

      Public Class Playlist
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.Playlist.trackName
  commentId: F:Global.Playlist.trackName
  id: trackName
  parent: Global.Playlist
  langs:
  - csharp
  - vb
  name: trackName
  nameWithType: Playlist.trackName
  fullName: Playlist.trackName
  type: Field
  source:
    id: trackName
    path: ''
    startLine: 1011
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public string trackName
    return:
      type: System.String
    content.vb: Public trackName As String
- uid: Global.Playlist.trackScenes
  commentId: F:Global.Playlist.trackScenes
  id: trackScenes
  parent: Global.Playlist
  langs:
  - csharp
  - vb
  name: trackScenes
  nameWithType: Playlist.trackScenes
  fullName: Playlist.trackScenes
  type: Field
  source:
    id: trackScenes
    path: ''
    startLine: 1012
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public List<string> trackScenes
    return:
      type: Global.List{System.String}
    content.vb: Public trackScenes As List(Of String)
- uid: Global.Playlist.songs
  commentId: F:Global.Playlist.songs
  id: songs
  parent: Global.Playlist
  langs:
  - csharp
  - vb
  name: songs
  nameWithType: Playlist.songs
  fullName: Playlist.songs
  type: Field
  source:
    id: songs
    path: ''
    startLine: 1013
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public List<AudioClip> songs
    return:
      type: Global.List{AudioClip}
    content.vb: Public songs As List(Of AudioClip)
- uid: Global.Playlist.shuffleTime
  commentId: F:Global.Playlist.shuffleTime
  id: shuffleTime
  parent: Global.Playlist
  langs:
  - csharp
  - vb
  name: shuffleTime
  nameWithType: Playlist.shuffleTime
  fullName: Playlist.shuffleTime
  type: Field
  source:
    id: shuffleTime
    path: ''
    startLine: 1014
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public float shuffleTime
    return:
      type: System.Single
    content.vb: Public shuffleTime As Single
- uid: Global.Playlist.volume
  commentId: F:Global.Playlist.volume
  id: volume
  parent: Global.Playlist
  langs:
  - csharp
  - vb
  name: volume
  nameWithType: Playlist.volume
  fullName: Playlist.volume
  type: Field
  source:
    id: volume
    path: ''
    startLine: 1015
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public float volume
    return:
      type: System.Single
    content.vb: Public volume As Single
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.List{System.String}
  commentId: '!:Global.List{System.String}'
  definition: Global.List`1
  name: List<string>
  nameWithType: List<string>
  fullName: List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Global.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: Global.List{AudioClip}
  commentId: '!:Global.List{AudioClip}'
  definition: Global.List`1
  name: List<AudioClip>
  nameWithType: List<AudioClip>
  fullName: List<AudioClip>
  nameWithType.vb: List(Of AudioClip)
  fullName.vb: List(Of AudioClip)
  name.vb: List(Of AudioClip)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.AudioClip
    name: AudioClip
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.AudioClip
    name: AudioClip
    isExternal: true
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
