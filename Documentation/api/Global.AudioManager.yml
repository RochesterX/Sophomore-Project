### YamlMime:ManagedReference
items:
- uid: Global.AudioManager
  commentId: T:Global.AudioManager
  id: AudioManager
  parent: Global
  children:
  - Global.AudioManager.Instance
  - Global.AudioManager.PlaySound(System.String)
  - Global.AudioManager.soundEffects
  langs:
  - csharp
  - vb
  name: AudioManager
  nameWithType: AudioManager
  fullName: AudioManager
  type: Class
  source:
    id: AudioManager
    path: ''
    startLine: 436
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: 'public class AudioManager : MonoBehaviour'
    content.vb: Public Class AudioManager Inherits MonoBehaviour
  inheritance:
  - System.Object
- uid: Global.AudioManager.soundEffects
  commentId: F:Global.AudioManager.soundEffects
  id: soundEffects
  parent: Global.AudioManager
  langs:
  - csharp
  - vb
  name: soundEffects
  nameWithType: AudioManager.soundEffects
  fullName: AudioManager.soundEffects
  type: Field
  source:
    id: soundEffects
    path: ''
    startLine: 438
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public List<SoundEffect> soundEffects
    return:
      type: Global.List{SoundEffect}
    content.vb: Public soundEffects As List(Of SoundEffect)
- uid: Global.AudioManager.Instance
  commentId: F:Global.AudioManager.Instance
  id: Instance
  parent: Global.AudioManager
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: AudioManager.Instance
  fullName: AudioManager.Instance
  type: Field
  source:
    id: Instance
    path: ''
    startLine: 440
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public static AudioManager Instance
    return:
      type: Global.AudioManager
    content.vb: Public Shared Instance As AudioManager
- uid: Global.AudioManager.PlaySound(System.String)
  commentId: M:Global.AudioManager.PlaySound(System.String)
  id: PlaySound(System.String)
  parent: Global.AudioManager
  langs:
  - csharp
  - vb
  name: PlaySound(string)
  nameWithType: AudioManager.PlaySound(string)
  fullName: AudioManager.PlaySound(string)
  type: Method
  source:
    id: PlaySound
    path: ''
    startLine: 466
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public void PlaySound(string soundName)
    parameters:
    - id: soundName
      type: System.String
    content.vb: Public Sub PlaySound(soundName As String)
  overload: Global.AudioManager.PlaySound*
  nameWithType.vb: AudioManager.PlaySound(String)
  fullName.vb: AudioManager.PlaySound(String)
  name.vb: PlaySound(String)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.List{SoundEffect}
  commentId: '!:Global.List{SoundEffect}'
  definition: Global.List`1
  name: List<SoundEffect>
  nameWithType: List<SoundEffect>
  fullName: List<SoundEffect>
  nameWithType.vb: List(Of SoundEffect)
  fullName.vb: List(Of SoundEffect)
  name.vb: List(Of SoundEffect)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: Global.SoundEffect
    name: SoundEffect
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Global.SoundEffect
    name: SoundEffect
  - name: )
- uid: Global.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: Global.AudioManager
  commentId: T:Global.AudioManager
  name: AudioManager
  nameWithType: AudioManager
  fullName: AudioManager
- uid: Global.AudioManager.PlaySound*
  commentId: Overload:Global.AudioManager.PlaySound
  name: PlaySound
  nameWithType: AudioManager.PlaySound
  fullName: AudioManager.PlaySound
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
