### YamlMime:ManagedReference
items:
- uid: Global.TrackLayer
  commentId: T:Global.TrackLayer
  id: TrackLayer
  parent: Global
  children:
  - Global.TrackLayer.enableTrigger
  - Global.TrackLayer.layerName
  - Global.TrackLayer.layerScenes
  - Global.TrackLayer.layerTrack
  - Global.TrackLayer.triggerName
  langs:
  - csharp
  - vb
  name: TrackLayer
  nameWithType: TrackLayer
  fullName: TrackLayer
  type: Class
  source:
    id: TrackLayer
    path: ''
    startLine: 991
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: >-
      [Serializable]

      public class TrackLayer
    content.vb: >-
      <Serializable>

      Public Class TrackLayer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Global.TrackLayer.layerName
  commentId: F:Global.TrackLayer.layerName
  id: layerName
  parent: Global.TrackLayer
  langs:
  - csharp
  - vb
  name: layerName
  nameWithType: TrackLayer.layerName
  fullName: TrackLayer.layerName
  type: Field
  source:
    id: layerName
    path: ''
    startLine: 994
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public string layerName
    return:
      type: System.String
    content.vb: Public layerName As String
- uid: Global.TrackLayer.layerTrack
  commentId: F:Global.TrackLayer.layerTrack
  id: layerTrack
  parent: Global.TrackLayer
  langs:
  - csharp
  - vb
  name: layerTrack
  nameWithType: TrackLayer.layerTrack
  fullName: TrackLayer.layerTrack
  type: Field
  source:
    id: layerTrack
    path: ''
    startLine: 995
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public AudioClip layerTrack
    return:
      type: Global.AudioClip
    content.vb: Public layerTrack As AudioClip
- uid: Global.TrackLayer.enableTrigger
  commentId: F:Global.TrackLayer.enableTrigger
  id: enableTrigger
  parent: Global.TrackLayer
  langs:
  - csharp
  - vb
  name: enableTrigger
  nameWithType: TrackLayer.enableTrigger
  fullName: TrackLayer.enableTrigger
  type: Field
  source:
    id: enableTrigger
    path: ''
    startLine: 997
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public TrackLayer.EnableTrigger enableTrigger
    return:
      type: Global.TrackLayer.EnableTrigger
    content.vb: Public enableTrigger As TrackLayer.EnableTrigger
- uid: Global.TrackLayer.layerScenes
  commentId: F:Global.TrackLayer.layerScenes
  id: layerScenes
  parent: Global.TrackLayer
  langs:
  - csharp
  - vb
  name: layerScenes
  nameWithType: TrackLayer.layerScenes
  fullName: TrackLayer.layerScenes
  type: Field
  source:
    id: layerScenes
    path: ''
    startLine: 999
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public List<string> layerScenes
    return:
      type: Global.List{System.String}
    content.vb: Public layerScenes As List(Of String)
- uid: Global.TrackLayer.triggerName
  commentId: F:Global.TrackLayer.triggerName
  id: triggerName
  parent: Global.TrackLayer
  langs:
  - csharp
  - vb
  name: triggerName
  nameWithType: TrackLayer.triggerName
  fullName: TrackLayer.triggerName
  type: Field
  source:
    id: triggerName
    path: ''
    startLine: 1000
  assemblies:
  - cs.temp.dll
  namespace: Global
  syntax:
    content: public string triggerName
    return:
      type: System.String
    content.vb: Public triggerName As String
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.AudioClip
  commentId: '!:Global.AudioClip'
  isExternal: true
  name: AudioClip
  nameWithType: AudioClip
  fullName: AudioClip
- uid: Global.TrackLayer.EnableTrigger
  commentId: T:Global.TrackLayer.EnableTrigger
  name: TrackLayer.EnableTrigger
  nameWithType: TrackLayer.EnableTrigger
  fullName: TrackLayer.EnableTrigger
  spec.csharp:
  - uid: Global.TrackLayer
    name: TrackLayer
  - name: .
  - uid: Global.TrackLayer.EnableTrigger
    name: EnableTrigger
  spec.vb:
  - uid: Global.TrackLayer
    name: TrackLayer
  - name: .
  - uid: Global.TrackLayer.EnableTrigger
    name: EnableTrigger
- uid: Global.List{System.String}
  commentId: '!:Global.List{System.String}'
  definition: Global.List`1
  name: List<string>
  nameWithType: List<string>
  fullName: List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: Global.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
